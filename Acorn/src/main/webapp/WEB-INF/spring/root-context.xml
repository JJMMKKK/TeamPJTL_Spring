<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 1. placeholder -->	
	<context:property-placeholder location="classpath:com/config/jdbc.properties"/>
	<!-- 외부 프로퍼티 파일에서 값들을 읽어오기 위한 설정 -->
	
	
	<!-- 2. jdbc연결 -->
	<bean id="myDataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
	<!-- 데이터베이스와의 연결을 관리하는 DataSource를 설정 -->
	<!--  <property> 태그를 통해 외부 프로퍼티 파일에서 읽어온 값들을 사용 -->
    	<property name="driverClassName" value="${oracle.driver}"/>
		<property name="url" value="${oracle.url}"/>
		<property name="username" value="${oracle.username}"/>
		<property name="password" value="${oracle.password}"/>
	</bean>


	<!-- 3. transaction -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<!-- 트랜잭션 관리를 위한 설정 -->
		<property name="dataSource" ref="myDataSource">						<!-- ref에 2번의 id -->
		<!--  <property>를 사용하여 데이터 소스를 지정 -->
		</property>
	</bean>
	
	
	<!-- 4. annotation 기반 트랜잭션 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	<!-- <tx:annotation-driven>을 통해 애노테이션 기반의 트랜잭션을 활성화 -->		
	
		
	<!-- 5. SQLSessionFactoryBean -->	
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- MyBatis의 SqlSessionFactory를 설정 -->
		<property name="dataSource" ref="myDataSource">						<!-- ref에 2번의 id -->
		</property>
		<property name="mapperLocations">
			<list>
				<value>classpath:com/config/MemberMapper.xml</value>
			</list>
		</property>
		<property name="typeAliases">
			<list>
				<value>com.dto.MemberDTO</value>
			</list>
		</property>
	</bean>
	
	
	<!-- 6. SQLSessionTemplate : SQLSession 기능 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<!--  SQL 쿼리를 실행하기 위해 활용 -->
		<constructor-arg name="sqlSessionFactory" ref="sessionFactory">		<!-- ref에 4번의 id -->
		</constructor-arg>
	</bean>
		
</beans>
